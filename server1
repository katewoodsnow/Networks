import java.io.*;
import java.net.*;
import java.nio.*;
import java.nio.charset.Charset;
import java.util.*;


public class server
{

	public static void main(String[] args) throws IOException {
		
		try(DatagramSocket socket = new DatagramSocket(9999)){
			byte[] buf = new byte[256];
			ByteArrayOutputStream result = new ByteArrayOutputStream();
			
			while(true) {
				DatagramPacket packet = new DatagramPacket(buf, buf.length);
				socket.receive(packet);
				
				// make the acknowledgement fail when the random number is odd to test application
	            Random random = new Random();
	            int chance = random.nextInt(100);
	            int SN = 0;
	            // If random number generated is even the packet will be received and sent back to the client.
	           
				if( (packet.getLength()==5) & ((chance % 2) == 0)) {
					ByteBuffer message = ByteBuffer.wrap(packet.getData(),
							0,packet.getLength());
					SN = message.getInt();
					byte payload = message.get();
					
					System.out.print("RECEIVED FROM CLIENT: Packet number:" + SN);
					System.out.print(" - ");
					System.out.println("ASCII " + payload);
					result.write(payload);
					

		            	// Byte array to send packet to client
		            	byte[] sendPacket = new byte[1024 ];
		            	// Put the sequence number received from client into the bytes packet to send back to client
		            	sendPacket = ByteBuffer.allocate(4).putInt(SN).array();
	            	
		            	InetAddress clientAddress = packet.getAddress();
		            	int clientPort = packet.getPort();
	            	
		            	// Constructor to create the datagram to send the packet data from the server to the client
		            	DatagramPacket send= new DatagramPacket(sendPacket, sendPacket.length, clientAddress, clientPort);
		            	// Send the datagram packet to the server
		            	socket.send(send); 
		           } else if (packet.getLength() == 4)  {
	            	ByteBuffer message = ByteBuffer.wrap(packet.getData(),0,
						packet.getLength());
	            	SN = message.getInt();
				
	            	//System.out.print( sequence);
	            	//System.out.print("-");
	            	System.out.println("Complete Data from Packages: " + new String(result.toByteArray(),
						Charset.forName("UTF8")));
	            	
	            	result = new ByteArrayOutputStream();
	            	
		           } else {

							System.out.println("The packet was dropped");
	            	}
	            	
		         
		            }
			}
	
		}
}
	
